/*
Visual fight between red and blue

A random location is chosen, and if that location is taken by a team, than the 3x3 area, centered around that location
is taken by that team

use:
to show how __read can be used.
*/



let c1:colour = #ff0000;
let c2:colour = #0000ff;

start(c1,c2);

fun init(c1:colour,c2:colour)->int{

    //clear
    __pixelr 0,0,__width,__height,#ffffff;

    //start left
    __pixelr 0,0,1,__height,c1;

    //start right
    __pixelr __width-1,0,1,__height,c2;
    return __height * __width;
}

fun start(c1:colour,c2:colour)->int{

    let debugPixel:bool = false; //set this to true to color the random coordinates returned by the random function

    let area:int = init(c1,c2);

    __print area;

    while(true){
        //choose a random location
        let x:int = __randi __width;
        let y:int = __randi __height;

        //get the current color of (x,y)
        let c:colour = __read x,y;

        //check colour
        if((c == c1) or (c == c2)){
            //fill a 3x3 location centered on the chosen location
            //made sure that we do not go out of bounds <0, but going out of bounds >height and >width was allowed because the VM just ignores that
            __pixelr max(x-1,0),max(y-1,0),3,3,c;

        }

        if(debugPixel){
            __pixel x,y,#00ff00;
        }

    }

    return 0;

}

fun max(i:int,j:int)->int{
    //using floats to test that int->float conversion works - no other practical reason
    let i_float:float = i;
    let j_float:float = j;

    if(i_float < j_float){
        return j;
    } else{
        return i;
    }

}

