/*
fun pattern that fills the entre screen, works on both odd and even height/widths
also works when height != width
after each square, a delay is started, whose duration depends on the size of the screen

use:
this example was created to show recursion.
*/


while(true){
    __delay square(0,0,__width,__height,0) * 1000;
}

fun square(x:int, y:int, w:int, h:int,colorId:int)->int{

    //stop condition
    if((w < 1) or (h < 1)){
        return 0;
    }

    //select the next colour
    let newColorId:int = colorId;

    if(colorId > 2){
        newColorId = 0;
    }


    let c:colour = #ffffff;

    if(newColorId == 0){
        c = #ff0000;
    }

    if(newColorId == 1){
        c = #00ff00;
    }

    if(newColorId == 2){
        c = #0000ff;
    }

    //fill the square
    __pixelr x,y,w,h,c;
    __delay 100;

    //recursive call
    let res:int = square(x+1,y+1,w-2,h-2,newColorId+1);
    return res+1;
}